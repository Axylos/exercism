(re-matches #"\w+" "string")
(re-pattern "ally" "ally ally oxen free ally")
(re-seq "ally" "ally ally oxen free ally")
(re-seq #"ally" "ally ally oxen free ally")
(count (re-seq #"ally" "ally ally oxen free ally"))
(seq "ally ally oxen")
(seq (clojure.string.spli "ally ally oxen" " ")
)
(seq (clojure.string/split "ally ally oxen" " "))
(seq (clojure.string/split "ally ally oxen" #" "))
(reduce fn [primes number]
(println number)
(prinln primes)
)))
(reduce (fn [primes number] println (primes "   " number)) (1 2 3 4 5))
(reduce (fn [primes number] println (str primes "   " number)) (1 2 3 4 5))
)
(reduce (fn [primes number] println ((str primes "   " number))) (1 2 3 4 5))
(re-match #"\w+" "ally ally oxen")
(re-matches #"\w+" "ally ally oxen")
(re-seq #"\w+" "ally ally oxen")
(def words "ally ally oxen free")
